name: Main Task

permissions:
    contents: write

on:
    schedule:
        - cron: "0 11 */7 * *"
    workflow_dispatch:

jobs:
    check:
        runs-on: ubuntu-latest
        outputs:
            update: ${{steps.should_update.outputs.update}}
            latest_version: ${{steps.should_update.outputs.latest_version}}
        steps:

          - name: Checkout This Repo
            uses: actions/checkout@v4
            with:
                ref: main

          - name: Get Last Built Version
            id: current_version
            uses: juliangruber/read-file-action@v1
            with:
                path: ./CURRENT_VERSION

          - name: Determine Should Update
            id: should_update
            run: |
                current_version="${{steps.current_version.outputs.content}}"
                current_version="${current_version%"${current_version##*[![:space:]]}"}"

                latest_version=$(curl -s "https://api.github.com/repos/jarikomppa/soloud/releases/latest" | jq -r '.tag_name')
                echo "latest_version=$latest_version" >> $GITHUB_OUTPUT
                
                echo "Built version: $current_version"
                echo "Latest version: $latest_version"

                if [ "$current_version" = "$latest_version" ]; then
                    echo "update=false" >> $GITHUB_OUTPUT
                    echo "Build skipped."
                else
                    echo "update=true" >> $GITHUB_OUTPUT
                    echo "Starting build process."
                fi

    build-windows:
        needs: check
        if: needs.check.outputs.update == 'true'
        uses: ./.github/workflows/build-windows.yml
        with:
            tag-name: ${{needs.check.outputs.latest_version}}

    build-linux:
        needs: check
        if: needs.check.outputs.update == 'true'
        uses: ./.github/workflows/build-linux.yml
        with:
            tag-name: ${{needs.check.outputs.latest_version}}

    build-macos:
        needs: check
        if: needs.check.outputs.update == 'true'
        uses: ./.github/workflows/build-macos.yml
        with:
            tag-name: ${{needs.check.outputs.latest_version}}

    update-version:
        runs-on: ubuntu-latest
        needs: [check, build-linux, build-macos, build-windows]
        permissions:
            contents: write
        env:
            LATEST_VERSION: ${{needs.check.outputs.latest_version}}
        outputs:
            updated_commit: ${{steps.commit.outputs.commit}}
        steps:

          - name: Checkout This Repo
            uses: actions/checkout@v4
            with:
                ref: main

          - name: Configure Git
            run: |
                git config --global user.name "${{github.actor}}"
                git config --global user.email "${{github.actor_id}}+${{github.actor}}@users.noreply.github.com"

          - name: Update Commit File
            run: |
                set +o noclobber
                echo "$LATEST_VERSION" > ./CURRENT_VERSION

          - name: Commit Changes
            id: commit
            run: |
                git add CURRENT_VERSION
                git commit -m "Automated: Update VERSION to $LATEST_VERSION"

                commit=$(git rev-parse HEAD)
                echo "commit=$commit" >> $GITHUB_OUTPUT

                git push

    release-artifacts:
        runs-on: ubuntu-latest
        needs: [check, build-linux, build-macos, build-windows, update-version]
        permissions:
            contents: write
        steps:

          - name: Download Artifact soloud_windows
            uses: actions/download-artifact@v4
            with:
                name: soloud_windows
                path: soloud_windows
                github-token: ${{github.token}}
                repository: ${{github.repository}}
                run-id: ${{needs.build-windows.outputs.runid}}

          - name: Download Artifact soloud_linux
            uses: actions/download-artifact@v4
            with:
                name: soloud_linux
                path: soloud_linux
                github-token: ${{github.token}}
                repository: ${{github.repository}}
                run-id: ${{needs.build-linux.outputs.runid}}

          - name: Download Artifact soloud_macos
            uses: actions/download-artifact@v4
            with:
                name: soloud_macos
                path: soloud_macos
                github-token: ${{github.token}}
                repository: ${{github.repository}}
                run-id: ${{needs.build-macos.outputs.runid}}

          - name: Release Artifacts
            uses: ncipollo/release-action@v1.16.0
            with:
                artifacts: soloud_windows/soloud_windows_x64_debug.7z, soloud_windows/soloud_windows_x64_release.7z, soloud_windows/soloud_windows_arm64_debug.7z, soloud_windows/soloud_windows_arm64_release.7z, soloud_linux/soloud_linux_x64_debug.7z, soloud_linux/soloud_linux_x64_release.7z, soloud_linux/soloud_linux_arm64_debug.7z, soloud_linux/soloud_linux_arm64_release.7z, soloud_macos/soloud_macos_x64_debug.7z, soloud_macos/soloud_macos_x64_release.7z, soloud_macos/soloud_macos_arm64_debug.7z, soloud_macos/soloud_macos_arm64_release.7z
                commit: ${{needs.update-version.outputs.updated_commit}}
                tag: ${{needs.check.outputs.latest_version}}
                body: Build for version ${{needs.check.outputs.latest_version}}.